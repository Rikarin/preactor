import { EventBase } from 'UnityEngine/UIElements';
import { DomStyleWrapper } from './dom-style';
export declare class DomWrapper {
    #private;
    get _dom(): CS.Preactor.Dom;
    get ve(): CS.UnityEngine.UIElements.VisualElement;
    get childNodes(): DomWrapper[];
    get firstChild(): DomWrapper | null;
    get parentNode(): DomWrapper | null;
    get nextSibling(): DomWrapper | null;
    get nodeType(): number;
    get Id(): string;
    set Id(value: string);
    get key(): string;
    set key(value: string);
    get style(): DomStyleWrapper;
    get value(): any;
    get checked(): boolean;
    get data(): any;
    set data(value: any);
    get classname(): string;
    set classname(value: string);
    constructor(dom: CS.Preactor.Dom);
    appendChild(child: DomWrapper): void;
    removeChild(child: DomWrapper): void;
    insertBefore(a: DomWrapper, b: DomWrapper): void;
    clearChildren(): void;
    focus(): void;
    contains(element: DomWrapper): boolean;
    addEventListener(type: string, listener: (event: EventBase) => void, useCapture?: boolean): void;
    removeEventListener(type: string, listener: (event: EventBase) => void, useCapture?: boolean): void;
    setAttribute(name: string, value: any): void;
    removeAttribute(name: string): void;
}
